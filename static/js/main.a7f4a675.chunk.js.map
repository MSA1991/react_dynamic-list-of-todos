{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedTodoId","handleSelectedTodo","className","map","todo","id","title","completed","isSelected","classNames","type","onClick","TodoFilter","filterTodos","query","handleChangeQuery","handleChangeFilter","value","onChange","e","target","All","Active","Completed","name","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","selectedUser","setSelectedUser","selectedTodo","getSelectedUser","a","userId","result","useEffect","href","email","getLowerString","str","toLowerCase","App","setTodos","setFilterTodos","setQuery","setSelectedTodoId","getTodosList","todoId","visibleTodos","newTodos","filter","trim","lowerTitle","lowerQuery","includes","getFilteredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7f4a675.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | [];\n  selectedTodoId: number;\n  handleSelectedTodo: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  handleSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n        const isSelected = selectedTodoId === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': isSelected,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectedTodo(id)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      {\n                        'fa-eye-slash': isSelected,\n                        'fa-eye': !isSelected,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { Filter } from '../../types/Filter';\n\ntype Props = {\n  filterTodos: string;\n  query: string;\n  handleChangeQuery: (value: string) => void;\n  handleChangeFilter: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterTodos,\n  query,\n  handleChangeQuery,\n  handleChangeFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterTodos}\n          onChange={(e) => handleChangeFilter(e.target.value)}\n        >\n          <option value={Filter.All}>All</option>\n          <option value={Filter.Active}>Active</option>\n          <option value={Filter.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        name=\"query\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => handleChangeQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => handleChangeQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todos: Todo[];\n  handleSelectedTodo: (todoId: number) => void\n  selectedTodoId: number;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  handleSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const selectedTodo = todos[selectedTodoId - 1];\n\n  const getSelectedUser = async () => {\n    const result = await getUser(selectedTodo.userId);\n\n    setSelectedUser(result);\n  };\n\n  useEffect(() => {\n    getSelectedUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleSelectedTodo(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { getTodos } from './api';\n\nconst getLowerString = (str: string) => {\n  return str.toLowerCase();\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [filterTodos, setFilterTodos] = useState<Filter>(Filter.All);\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  const getTodosList = async () => {\n    const result = await getTodos();\n\n    setTodos(result);\n  };\n\n  useEffect(() => {\n    getTodosList();\n  }, []);\n\n  const handleChangeFilter = (value: string) => {\n    setFilterTodos(value as Filter);\n  };\n\n  const handleChangeQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleSelectedTodo = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const getFilteredTodos = () => {\n    let newTodos = [...todos];\n\n    if (filterTodos === Filter.Active) {\n      newTodos = newTodos.filter(todo => !todo.completed);\n    }\n\n    if (filterTodos === Filter.Completed) {\n      newTodos = newTodos.filter(todo => todo.completed);\n    }\n\n    if (query.trim() !== '') {\n      newTodos = newTodos.filter(({ title }) => {\n        const lowerTitle = getLowerString(title);\n        const lowerQuery = getLowerString(query).trim();\n\n        return lowerTitle.includes(lowerQuery);\n      });\n    }\n\n    return newTodos;\n  };\n\n  const visibleTodos = getFilteredTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterTodos={filterTodos}\n                query={query}\n                handleChangeFilter={handleChangeFilter}\n                handleChangeQuery={handleChangeQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodoId}\n                  handleSelectedTodo={handleSelectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!selectedTodoId && (\n        <TodoModal\n          todos={todos}\n          selectedTodoId={selectedTodoId}\n          handleSelectedTodo={handleSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}